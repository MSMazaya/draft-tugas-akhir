apiVersion: v1
kind: Pod
metadata:
  name: elasticsearch
  generateName: elasticsearch-
# spec:
#   selector:
#     matchLabels:
#       app: elasticsearch
#   template:
#     metadata:
#       labels:
#         app: elasticsearch
spec:
  # containerStatuses:
  #   name: elasticsearch-cs
  #   ready: true
  #   allocatedResources:
  #     cpu: "900m"
  #     memory: "5000Mi"
  #   resources:
  #     requests:
  #       memory: "5000Mi"
  #       cpu: "900m"
  #     limits:
  #       memory: "5000Mi"
  #       cpu: "900m"
  #   restartCount: 0
  #   started: true
  # qosClass: Guaranteed
  containers:
    - name: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
      ports:
        - containerPort: 9200
          name: http
          protocol: TCP
      resizePolicy:
        - resourceName: cpu
          restartPolicy: NotRequired
        - resourceName: memory
          restartPolicy: NotRequired
      resources:
        requests:
          memory: "5000Mi"
          cpu: "1200m"
        limits:
          memory: "5000Mi"
          cpu: "1200m"
      volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
      env:
        - name: cluster.name
          value: cluster-ta
        - name: node.name
          value: node-1
        - name: network.host
          value: 0.0.0.0
        - name: http.port
          value: "9200"
        - name: xpack.security.enabled
          value: "false"
        - name: discovery.seed_hosts
          value: 0.0.0.0
        - name: cluster.initial_master_nodes
          value: '["node-1"]'
  volumes:
    - name: elasticsearch-data
      persistentVolumeClaim:
        claimName: elasticsearch-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 6Gi
